#
# /*******************************************************************************
#  * Copyright 2020 (C) N*able
#  * @author Roshan Wijendra
#  *******************************************************************************/
#

spring.application.name=transfer-microservice
#local testing only
server.port=8084
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#local and local server
#spring.datasource.url=jdbc:db2://10.30.2.219:50000/cmndb2db
#spring.datasource.username=db2esb1
#spring.datasource.password=db2esb1
#sampath server
#spring.datasource.url=jdbc:db2://192.125.125.35:50000/SAMESB
#spring.datasource.username=db2esb1
#spring.datasource.password=db2esb2
#local to sampath server via vpn
spring.datasource.url=jdbc:db2://10.30.2.35:50000/SAMESB
spring.datasource.username=db2esb1
spring.datasource.password=db2esb2
#
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
#
#spring.datasource.url=jdbc:mysql://localhost:3306/SB_OC_COR_TRANSFER
#spring.datasource.username=root
#spring.datasource.password=
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#spring.datasource.url=jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1
#spring.datasource.username=db2esb1
#spring.datasource.password=db2esb2
#spring.datasource.driver-class-name=org.h2.Driver

# Enabling H2 Console
#spring.h2.console.enabled=true

# Custom H2 Console URL
#spring.h2.console.path=/h2

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.default_schema=SB_OC_COR_TRANSFER
#spring.main.allow-bean-definition-overriding=true
#Datasource naming
#spring.jmx.default-domain=SampathCoreTransfer
#
## logging level
logging.level.org.springframework=info
logging.level.biz.nable.sb.cor.comp=DEBUG
#
## output to a file
#logging.file=app.log
#
## temp folder example
##logging.file=${java.io.tmpdir}/app.log
#
#logging.pattern.file=%d %p %c{1.} [%t] %m%n
#
#logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n
#===========================
# URLs
#===========================
custom.iib.finacle.integration.url = http://10.30.2.114:7800/sd/iib/IIBFinacleIntegration
nable.biz.common.util.approval.service.url=http://localhost:8081
#nable.biz.common.util.approval.service.url=http://10.30.2.111:9081/apprv
commission.microservice.url=http://localhost:8083
limit.microservice.url=http://localhost:9081/limits
#==========================
# Application
#==========================
system.find.init.date=1900-01-01

#===================================
#Finacle Properties
#===================================
finacle.data.object.app-code=VSW
finacle.data.object.cdci-code=B
finacle.data.object.controller=CMN
finacle.data.object.currency=LKR
finacle.data.object.sol-id=001
